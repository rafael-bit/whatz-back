// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Rafael Bit",
            "url": "https://github.com/rafael-bit",
            "email": "rafael@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/rooms": {
            "post": {
                "description": "Cria uma nova sala com controle de acesso por tags (rota administrativa)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Criar sala com controle de acesso",
                "parameters": [
                    {
                        "description": "Dados da sala com controle de acesso",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateRoomWithAccessRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Sala criada com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/users/role/{role}": {
            "get": {
                "description": "Retorna todos os usuários com uma role específica",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Buscar usuários por role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role dos usuários",
                        "name": "role",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de usuários por role",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/users/{id}/role": {
            "put": {
                "description": "Atualiza a role de um usuário (rota administrativa)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Atualizar role do usuário",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Nova role do usuário",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role atualizada com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/admin/users/{id}/tags": {
            "put": {
                "description": "Atualiza as tags de um usuário (rota administrativa)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Atualizar tags do usuário",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Lista de tags",
                        "name": "tags",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tags atualizadas com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/rooms": {
            "get": {
                "description": "Retorna lista de salas baseada no usuário e suas permissões",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Listar salas",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do usuário para filtrar salas acessíveis",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de salas",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Usuário não encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Cria uma nova sala de chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Criar nova sala",
                "parameters": [
                    {
                        "description": "Dados da sala",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateRoomRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Sala criada com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/rooms/public": {
            "get": {
                "description": "Retorna apenas as salas públicas do sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Listar salas públicas",
                "responses": {
                    "200": {
                        "description": "Lista de salas públicas",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/rooms/{id}": {
            "get": {
                "description": "Retorna uma sala específica pelo ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Buscar sala por ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID da sala",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sala encontrada",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Sala não encontrada",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Atualiza os dados de uma sala existente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Atualizar sala",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID da sala",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados atualizados da sala",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateRoomRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sala atualizada com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Sala não encontrada",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove uma sala do sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Deletar sala",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID da sala",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sala deletada com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/rooms/{id}/messages": {
            "get": {
                "description": "Retorna as mensagens de uma sala específica com paginação",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Buscar mensagens de uma sala",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID da sala",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limite de mensagens (padrão: 50)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset para paginação (padrão: 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mensagens da sala",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Sala não encontrada",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Retorna uma lista de todos os usuários do sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Listar todos os usuários",
                "responses": {
                    "200": {
                        "description": "Lista de usuários",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Cria um novo usuário no sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Criar novo usuário",
                "parameters": [
                    {
                        "description": "Dados do usuário",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Usuário criado com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Retorna um usuário específico pelo ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Buscar usuário por ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuário encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Usuário não encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Atualiza os dados de um usuário existente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Atualizar usuário",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados atualizados do usuário",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuário atualizado com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Dados inválidos",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Usuário não encontrado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove um usuário do sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Deletar usuário",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuário deletado com sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.CreateRoomRequest": {
            "description": "Dados necessários para criar uma nova sala",
            "type": "object",
            "required": [
                "created_by",
                "name"
            ],
            "properties": {
                "created_by": {
                    "description": "@Description ID do usuário que criou a sala\n@Example \"123e4567-e89b-12d3-a456-426614174000\"",
                    "type": "string"
                },
                "description": {
                    "description": "@Description Descrição da sala (máximo 500 caracteres)\n@Example \"Sala para conversas gerais\"",
                    "type": "string",
                    "maxLength": 500
                },
                "name": {
                    "description": "@Description Nome da sala (3-100 caracteres)\n@Example \"Sala Geral\"",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "type": {
                    "description": "@Description Tipo da sala (public ou private)\n@Example \"public\"",
                    "type": "string",
                    "enum": [
                        "public",
                        "private"
                    ]
                }
            }
        },
        "controllers.CreateRoomWithAccessRequest": {
            "description": "Dados necessários para criar uma sala com controle de acesso (rota administrativa)",
            "type": "object",
            "required": [
                "created_by",
                "name"
            ],
            "properties": {
                "access_tags": {
                    "description": "@Description Lista de tags de acesso\n@Example [\"vip\", \"premium\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_by": {
                    "description": "@Description ID do usuário que criou a sala\n@Example \"123e4567-e89b-12d3-a456-426614174000\"",
                    "type": "string"
                },
                "description": {
                    "description": "@Description Descrição da sala (máximo 500 caracteres)\n@Example \"Sala exclusiva para membros VIP\"",
                    "type": "string",
                    "maxLength": 500
                },
                "name": {
                    "description": "@Description Nome da sala (3-100 caracteres)\n@Example \"Sala VIP\"",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "type": {
                    "description": "@Description Tipo da sala (public ou private)\n@Example \"private\"",
                    "type": "string",
                    "enum": [
                        "public",
                        "private"
                    ]
                }
            }
        },
        "controllers.CreateUserRequest": {
            "description": "Dados necessários para criar um novo usuário",
            "type": "object",
            "required": [
                "email",
                "username"
            ],
            "properties": {
                "avatar": {
                    "description": "@Description URL do avatar do usuário\n@Example \"https://example.com/avatar.jpg\"",
                    "type": "string"
                },
                "email": {
                    "description": "@Description Email do usuário\n@Example \"joao@example.com\"",
                    "type": "string"
                },
                "username": {
                    "description": "@Description Nome de usuário (3-50 caracteres)\n@Example \"joao123\"",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "controllers.UpdateRoomRequest": {
            "description": "Dados necessários para atualizar uma sala existente",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "description": "@Description Descrição da sala (máximo 500 caracteres)\n@Example \"Sala para conversas gerais\"",
                    "type": "string",
                    "maxLength": 500
                },
                "name": {
                    "description": "@Description Nome da sala (3-100 caracteres)\n@Example \"Sala Geral\"",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "type": {
                    "description": "@Description Tipo da sala (public ou private)\n@Example \"public\"",
                    "type": "string",
                    "enum": [
                        "public",
                        "private"
                    ]
                }
            }
        },
        "controllers.UpdateUserRequest": {
            "description": "Dados necessários para atualizar um usuário existente",
            "type": "object",
            "required": [
                "email",
                "username"
            ],
            "properties": {
                "avatar": {
                    "description": "@Description URL do avatar do usuário\n@Example \"https://example.com/avatar.jpg\"",
                    "type": "string"
                },
                "email": {
                    "description": "@Description Email do usuário\n@Example \"joao@example.com\"",
                    "type": "string"
                },
                "status": {
                    "description": "@Description Status do usuário (online, offline, away)\n@Example \"online\"",
                    "type": "string",
                    "enum": [
                        "online",
                        "offline",
                        "away"
                    ]
                },
                "username": {
                    "description": "@Description Nome de usuário (3-50 caracteres)\n@Example \"joao123\"",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Digite \"Bearer\" seguido de um espaço e o token JWT.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Whatz Chat API",
	Description:      "API para sistema de chat em tempo real Whatz",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
